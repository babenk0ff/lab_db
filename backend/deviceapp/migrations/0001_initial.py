# Generated by Django 4.1.7 on 2023-02-28 09:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DecimalNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(help_text='Формат: 123456.789 или 123456.789-01', max_length=13, validators=[django.core.validators.RegexValidator(message='Неверный формат номера', regex='^[0-9]{6}.[0-9]{3}(-[0-9]{2})?$')], verbose_name='Цифровая часть децимального номера')),
                ('is_used', models.BooleanField(default=False, verbose_name='Присвоен')),
            ],
            options={
                'verbose_name': 'Децимальный номер',
                'verbose_name_plural': 'Децимальные номера',
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Наименование типа изделия')),
            ],
            options={
                'verbose_name': 'Тип изделия',
                'verbose_name_plural': 'Типы изделий',
            },
        ),
        migrations.CreateModel(
            name='OrgCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_code', message='Код должен состоять из четырех кириллических букв', regex='^[а-яА-Я]{4}$')], verbose_name='Четырехзначный буквенный код')),
            ],
            options={
                'verbose_name': 'Код организации-разработчика',
                'verbose_name_plural': 'Коды организаций-разработчиков',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название темы')),
            ],
            options={
                'verbose_name': 'Тема',
                'verbose_name_plural': 'Темы',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(max_length=10, unique=True, verbose_name='Индекс изделия')),
                ('decimal_num', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='deviceapp.decimalnumber', verbose_name='Децимальный номер')),
                ('part_of', models.ManyToManyField(blank=True, to='deviceapp.deviceapp', verbose_name='В какое изделие входит')),
                ('theme', models.ManyToManyField(blank=True, to='deviceapp.theme', verbose_name='Тема')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='deviceapp.devicetype', verbose_name='Тип изделия')),
            ],
            options={
                'verbose_name': 'Изделие',
                'verbose_name_plural': 'Изделия',
            },
        ),
        migrations.AddField(
            model_name='decimalnumber',
            name='org_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='deviceapp.orgcode', verbose_name='Код организации-разработчика'),
        ),
    ]
